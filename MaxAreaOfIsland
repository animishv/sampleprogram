
boolean[][] seen;

public static int maxAreaIsland(int[][] matrix) {
    if(matrix == null) {
        return 0;
    }

    int rows = matrix.length;
    int columns = matrix[0].length;

    int max_area = 0;
    seen = new boolean[rows][columns];

    for(int i = 0; i < rows; i++){
        for(int j = 0; j < columns; j++){
            max_area = Math.max(max_area, area(matrix, i, j));
        }
    }
    return max_area;
}

public int area(int[][] matrix, int row, int column) {
    if(matrix[row][column] == 0 || row < 0 || column < 0 || row >= matrix.length || column >= matrix[0].length || seen[row][column]) {
        return 0;
    }
    
    seen[row][column] = true;
    return (1 + area(matrix, row+1, column) + area(matrix, row-1, column) + area(matrix, row, column+1) + area(matrix, row, column)-1);
}
