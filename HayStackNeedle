public static int hayStackNeedle(String haystack, String needle) {

    int M = hastack.length();
    int N = needle.length();
    
    if(N > M || haystack == null || M == 0){
             return -1;
         }

    for (int i = 0; i < M - N + 1; i++) {
        if (haystack.substring(i, i + N).equals(needle)) {
            return i;
        }
    }
    return -1;
}

Using 2 pointers

public boolean findString(String hayStack, String Needle) {

    int start = 0;
    int end = M - N + 1;
    while (start < end) {
        int j = 0
        while (j < N) {
            if (str1.charAt(start) == str2.charAt(j)) {
                j++;
                start++;
            } else {
                start++;
                break;

            }
        }
        if (j == N) {
            return true;
        }
    }
    return false;
}
