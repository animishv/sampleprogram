public static List<List<Integer>> combinationSum(int[] input, int target){
List<List<Integer>> result = new ArrayList<List<Integer>>();
List<Integer> temp = new ArrayList<Integer>();
Arrays.sort(input);
findCombinationSum(input, target, result, temp, 0);
return result;
}

public static void findCombinationSum(int[] input, int target, List<List<Integer>> result, List<Integer> temp, int sum, int index){
if(target == 0){
temp = new ArrayList<Integer>();
result.add(temp);
return;
} 
for(int i = index; i < input.length; i++){
if((target > input[i]){
break;
} else {
temp.add(input[i]);
findCombinationSum(input, target - input[i], result, temp, i);
temp.remove(temp.size() - 1);
} 
}
}
